#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="student")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region 可扩展性方法定义
  partial void OnCreated();
  partial void Insertstu(stu instance);
  partial void Updatestu(stu instance);
  partial void Deletestu(stu instance);
  partial void Insertprovince(province instance);
  partial void Updateprovince(province instance);
  partial void Deleteprovince(province instance);
  partial void Insertcity(city instance);
  partial void Updatecity(city instance);
  partial void Deletecity(city instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["studentConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<stu> stu
	{
		get
		{
			return this.GetTable<stu>();
		}
	}
	
	public System.Data.Linq.Table<province> province
	{
		get
		{
			return this.GetTable<province>();
		}
	}
	
	public System.Data.Linq.Table<city> city
	{
		get
		{
			return this.GetTable<city>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.stu")]
public partial class stu : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _stu_xh;
	
	private string _stu_name;
	
	private string _stu_pass;
	
	private string _stu_sex;
	
	private string _stu_pro;
	
	private string _stu_city;
	
	private string _stu_hobby;
	
	private string _stu_etc;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstu_xhChanging(string value);
    partial void Onstu_xhChanged();
    partial void Onstu_nameChanging(string value);
    partial void Onstu_nameChanged();
    partial void Onstu_passChanging(string value);
    partial void Onstu_passChanged();
    partial void Onstu_sexChanging(string value);
    partial void Onstu_sexChanged();
    partial void Onstu_proChanging(string value);
    partial void Onstu_proChanged();
    partial void Onstu_cityChanging(string value);
    partial void Onstu_cityChanged();
    partial void Onstu_hobbyChanging(string value);
    partial void Onstu_hobbyChanged();
    partial void Onstu_etcChanging(string value);
    partial void Onstu_etcChanged();
    #endregion
	
	public stu()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_xh", DbType="NVarChar(50)")]
	public string stu_xh
	{
		get
		{
			return this._stu_xh;
		}
		set
		{
			if ((this._stu_xh != value))
			{
				this.Onstu_xhChanging(value);
				this.SendPropertyChanging();
				this._stu_xh = value;
				this.SendPropertyChanged("stu_xh");
				this.Onstu_xhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_name", DbType="NVarChar(50)")]
	public string stu_name
	{
		get
		{
			return this._stu_name;
		}
		set
		{
			if ((this._stu_name != value))
			{
				this.Onstu_nameChanging(value);
				this.SendPropertyChanging();
				this._stu_name = value;
				this.SendPropertyChanged("stu_name");
				this.Onstu_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_pass", DbType="NVarChar(50)")]
	public string stu_pass
	{
		get
		{
			return this._stu_pass;
		}
		set
		{
			if ((this._stu_pass != value))
			{
				this.Onstu_passChanging(value);
				this.SendPropertyChanging();
				this._stu_pass = value;
				this.SendPropertyChanged("stu_pass");
				this.Onstu_passChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_sex", DbType="NVarChar(4)")]
	public string stu_sex
	{
		get
		{
			return this._stu_sex;
		}
		set
		{
			if ((this._stu_sex != value))
			{
				this.Onstu_sexChanging(value);
				this.SendPropertyChanging();
				this._stu_sex = value;
				this.SendPropertyChanged("stu_sex");
				this.Onstu_sexChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_pro", DbType="NVarChar(50)")]
	public string stu_pro
	{
		get
		{
			return this._stu_pro;
		}
		set
		{
			if ((this._stu_pro != value))
			{
				this.Onstu_proChanging(value);
				this.SendPropertyChanging();
				this._stu_pro = value;
				this.SendPropertyChanged("stu_pro");
				this.Onstu_proChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_city", DbType="NVarChar(50)")]
	public string stu_city
	{
		get
		{
			return this._stu_city;
		}
		set
		{
			if ((this._stu_city != value))
			{
				this.Onstu_cityChanging(value);
				this.SendPropertyChanging();
				this._stu_city = value;
				this.SendPropertyChanged("stu_city");
				this.Onstu_cityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_hobby", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string stu_hobby
	{
		get
		{
			return this._stu_hobby;
		}
		set
		{
			if ((this._stu_hobby != value))
			{
				this.Onstu_hobbyChanging(value);
				this.SendPropertyChanging();
				this._stu_hobby = value;
				this.SendPropertyChanged("stu_hobby");
				this.Onstu_hobbyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stu_etc", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string stu_etc
	{
		get
		{
			return this._stu_etc;
		}
		set
		{
			if ((this._stu_etc != value))
			{
				this.Onstu_etcChanging(value);
				this.SendPropertyChanging();
				this._stu_etc = value;
				this.SendPropertyChanged("stu_etc");
				this.Onstu_etcChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.province")]
public partial class province : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _province1;
	
	private string _province_id;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onprovince1Changing(string value);
    partial void Onprovince1Changed();
    partial void Onprovince_idChanging(string value);
    partial void Onprovince_idChanged();
    #endregion
	
	public province()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="province", Storage="_province1", DbType="NVarChar(50)")]
	public string province1
	{
		get
		{
			return this._province1;
		}
		set
		{
			if ((this._province1 != value))
			{
				this.Onprovince1Changing(value);
				this.SendPropertyChanging();
				this._province1 = value;
				this.SendPropertyChanged("province1");
				this.Onprovince1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_id", DbType="NVarChar(50)")]
	public string province_id
	{
		get
		{
			return this._province_id;
		}
		set
		{
			if ((this._province_id != value))
			{
				this.Onprovince_idChanging(value);
				this.SendPropertyChanging();
				this._province_id = value;
				this.SendPropertyChanged("province_id");
				this.Onprovince_idChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
public partial class city : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _id;
	
	private string _city1;
	
	private string _province_id;
	
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncity1Changing(string value);
    partial void Oncity1Changed();
    partial void Onprovince_idChanging(string value);
    partial void Onprovince_idChanged();
    #endregion
	
	public city()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int id
	{
		get
		{
			return this._id;
		}
		set
		{
			if ((this._id != value))
			{
				this.OnidChanging(value);
				this.SendPropertyChanging();
				this._id = value;
				this.SendPropertyChanged("id");
				this.OnidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="city", Storage="_city1", DbType="NVarChar(50)")]
	public string city1
	{
		get
		{
			return this._city1;
		}
		set
		{
			if ((this._city1 != value))
			{
				this.Oncity1Changing(value);
				this.SendPropertyChanging();
				this._city1 = value;
				this.SendPropertyChanged("city1");
				this.Oncity1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_id", DbType="NVarChar(50)")]
	public string province_id
	{
		get
		{
			return this._province_id;
		}
		set
		{
			if ((this._province_id != value))
			{
				this.Onprovince_idChanging(value);
				this.SendPropertyChanging();
				this._province_id = value;
				this.SendPropertyChanged("province_id");
				this.Onprovince_idChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
